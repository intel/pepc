on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        required: false
        default: 'ubuntu-latest'
      python_version:
        type: string
        required: false
        default: '3.13'

jobs:
  checks:
    runs-on: ${{ inputs.runs_on }}

    steps:
      - name: "Install packages"
        run: |
          sudo -E apt-get -o Acquire::Retries=30 -qq update
          sudo -E apt-get -o Acquire::Retries=30 -qq -y install file

      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Information about changes"
        run: |
          # Determine the base commit for comparison based on the event type
          [ "${{ github.event_name }}" = "push" ] &&
            from="refs/remotes/origin/${{ github.event.repository.default_branch }}" ||
            from="${{ github.event.pull_request.base.sha }}"

          # List all commits in the range and display them
          git rev-list --pretty=oneline "$from..HEAD" --

      - name: "Set up Python ${{ inputs.python_version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pip'

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip

          pip install --upgrade .
          pip install mypy types-PyYAML types-paramiko types-colorama pandas-stubs plotly-stubs

      - name: "Find modified files"
        run: |
          # Determine the base commit for comparison based on the event type
          # For push events, use the default branch
          # For pull requests, use the base commit of the PR
          [ "${{ github.event_name }}" = "push" ] &&
            from="refs/remotes/origin/${{ github.event.repository.default_branch }}" ||
            from="${{ github.event.pull_request.base.sha }}"

          mkdir -- .tmp
          touch .tmp/modified-files

          # Find modified files, filter for Python scripts, and save them to modified-files
          git diff-tree --diff-filter=d --no-commit-id --name-status -r "$from..HEAD" | \
            cut -f2- | xargs -r file -Ni -- | \
            sed -n -e 's#: text/x-script.python;.*##p' > .tmp/modified-files;

          echo "Files to check:"
          cat .tmp/modified-files

      - name: "Run mypy for type checking on modified files"
        run: |
          xargs -a .tmp/modified-files -r mypy --follow-imports=silent -- > .tmp/mypy.results || retcode=1

          # Format the mypy output for GitHub annotations
          sed < .tmp/mypy.results -r -n \
            -e 's#^(.*\.py):([0-9]+): ([^:]+): (.*)#::\3 file=\1,line=\2,endline=,col=1::[mypy] \4#' \
            -e 's#::note #::notice #' \
            -e '/^::/p'

          exit ${retcode:-0}
