.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "C\-states" "" "" "" ""
.SH Command \f[I]\[aq]cstates\[aq]\f[R]
.SS General options
.TP
\f[B]\-h\f[R]
Show a short help message and exit.
.TP
\f[B]\-q\f[R]
Be quiet (print only improtant messages like warnings).
.TP
\f[B]\-d\f[R]
Print debugging information.
.TP
\f[B]\-\-debug\-modules\f[R] \f[I]MODNAME[,MODNAME1,...]\f[R]
While the \[aq]\-d\[aq] option enables all debug messages, this option
limits them to the specified modules.
For example, \[aq]\-d \-\-debug\-modules MSR\[aq] will only show debug
messages from the \[aq]MSR\[aq] module.
.TP
\f[B]\-\-version\f[R]
Print the version number and exit.
.TP
\f[B]\-H\f[R] \f[I]HOSTNAME\f[R], \f[B]\-\-host\f[R] \f[I]HOSTNAME\f[R]
Host name or IP address of the target system.
The pepc command will be executed on this system using SSH, instead of
running it locally.
If not specified, the command will be run locally.
.TP
\f[B]\-U\f[R] \f[I]USERNAME\f[R], \f[B]\-\-username\f[R] \f[I]USERNAME\f[R]
Name of the user to use for logging into the remote host over SSH.
The default user name is \[aq]root\[aq].
.TP
\f[B]\-K\f[R] \f[I]PRIVKEY\f[R], \f[B]\-\-priv\-key\f[R] \f[I]PRIVKEY\f[R]
Path to the private SSH key for logging into the remote host.
Defaults to keys in standard paths like \[aq]$HOME/.ssh\[aq].
.TP
\f[B]\-T\f[R] \f[I]TIMEOUT\f[R], \f[B]\-\-timeout\f[R] \f[I]TIMEOUT\f[R]
Timeout for establishing an SSH connection in seconds.
Defaults to 8.
.TP
\f[B]\-D\f[R] \f[I]DATASET\f[R], \f[B]\-\-dataset\f[R] \f[I]DATASET\f[R]
This option is for debugging and testing.
It specifies the dataset to emulate a host for running the command.
Typically used when running \[aq]pepc\[aq] from the source directory,
which includes datasets for various systems.
.RS
.PP
The argument can be a dataset path or name.
If specified by name, the following locations are searched for the
dataset.
.IP "1." 3
\[aq]./tests/data\[aq] in the program\[aq]s directory
.IP "2." 3
\[aq]$PEPC_DATA_PATH/tests/data\[aq]
.IP "3." 3
\[aq]$HOME/.local/share/pepc/tests/data\[aq]
.IP "4." 3
\[aq]$VIRTUAL_ENV/share/tests/data\[aq]
.IP "5." 3
\[aq]/usr/local/share/pepc/tests/data\[aq]
.IP "6." 3
\[aq]/usr/share/pepc/tests/data\[aq]
.RE
.TP
\f[B]\-\-force\-color\f[R]
Force colorized output even if the output stream is not a terminal (adds
ANSI escape codes).
.TP
\f[B]\-\-print\-man\-path\f[R]
Print path to pepc manual pages directory and exit.
This path can be added to the \[aq]MANPATH\[aq] environment variable to
make the manual pages available to the \[aq]man\[aq] tool.
.TP
\f[B]\-\-override\-cpu\-model\f[R] \f[I]VFM\f[R]
This option is for debugging and testing purposes only.
Override the target host CPU model and force {TOOLNAME} treat the host
as a specific CPU model.
The format is \[aq][<Vendor>:][<Family>:]<Model>\[aq], where
\[aq]<Vendor>\[aq] is the CPU vendor (e.g., \[aq]GenuineIntel\[aq] or
\[aq]AuthenticAMD\[aq]), \[aq]<Family>\[aq] is the CPU family (e.g., 6),
and \[aq]<Model>\[aq] is the CPU model (e.g., 0x8F).
Example: \[aq]GenuineIntel:6:0x8F\[aq] will force the tool treating the
target host CPU as a Sapphire Rapids Xeon.
The vendor and family are optional and if not specified, the tool will
use the vendor and family of the target host CPU.
The family and model can be specified in decimal or hexadecimal format.
.SS Target CPU specification options
All sub\-commans (\f[I]\[aq]info\[aq]\f[R], \f[I]\[aq]config\[aq]\f[R])
support the following target CPU specification options.
.TP
\f[B]\-\-cpus\f[R] \f[I]CPUS\f[R]
The list can include individual CPU numbers and CPU number ranges.
For example,\[aq]1\-4,7,8,10\-12\[aq] would mean CPUs 1 to 4, CPUs 7, 8,
and 10 to 12.
Use the special keyword \[aq]all\[aq] to specify all CPUs.
.TP
\f[B]\-\-cores\f[R] \f[I]CORES\f[R]
The list can include individual core numbers and core number ranges.
For example, \[aq]1\-4,7,8,10\-12\[aq] would mean cores 1 to 4, cores 7,
8, and 10 to 1.
Use the special keyword \[aq]all\[aq] to specify all cores.
This option has to be accompanied by the \[aq]\-\-package\[aq] option,
because core numbers are per\-package.
.TP
\f[B]\-\-modules\f[R] \f[I]MODULES\f[R]
The list can include individual module numbers and module number ranges.
For example, \[aq]0,2\-5\[aq] would mean module 0 and modules 2, 3, 4,
and 5.
Use the special keyword \[aq]all\[aq] to specify all modules.
Note, unlike core and die numbers, module numbers are absolute.
.TP
\f[B]\-\-dies\f[R] \f[I]DIES\f[R]
The list can include individual die numbers and die number ranges.
For example, \[aq]0\-3,5\[aq] would mean dies 0 to 3, and die 5.
Use the special keyword \[aq]all\[aq] to specify all dies.
On some systems, die numbers are globally unique, while on other systems
they are relative to the package.
In the latter case, this option has to be accompanied by the
\[aq]\-\-package\[aq] option.
.TP
\f[B]\-\-packages\f[R] \f[I]PACKAGES\f[R]
The list can include individual package numbers and package number
ranges.
For example, \[aq]0,2\-4\[aq] would mean package 0 and packages 2 to 4.
Use the special keyword \[aq]all\[aq] to specify all packages.
.TP
\f[B]\-\-core\-siblings\f[R] \f[I]CORE_SIBLINGS\f[R]
Core siblings are CPUs sharing the same core.
The list can include individual core sibling indices or index ranges.
For example, if a core includes CPUs 3 and 4, index \[aq]0\[aq] would
mean CPU 3 and index \[aq]1\[aq] would mean CPU 4.
This option can only be used to reference online CPUs, because Linux
does not provide topology information for offline CPUs.
In the example with CPUs 3 and 4, if CPU 3 was offline, then index
\[aq]0\[aq] would mean CPU 4.
.TP
\f[B]\-\-module\-siblings\f[R] \f[I]MODULE_SIBLINGS\f[R]
Module siblings are CPUs sharing the same module.
The list can include individual module sibling indices or index ranges.
For example, if a module includes CPUs 3, 4, 5, and 6, index \[aq]0\[aq]
would mean CPU 3, index \[aq]1\[aq] would mean CPU 4, and idex
\[aq]3\[aq] would mean CPU 5.
This option can only be used to reference online CPUs, because Linux
does not provide topology information for offline CPUs.
In the example with CPUs 3, 4, 5 and 6, if CPU 4 was offline, then index
\[aq]1\[aq] would mean CPU 5.
.SS Subcommand \f[I]\[aq]info\[aq]\f[R]
Retrieve C\-state information for specified CPUs.
By default, display all details for all CPUs.
Use target CPU specification options to limit the scope to specific
CPUs, cores, dies, or packages.
.TP
\f[B]\-\-yaml\f[R]
Print information in YAML format.
.TP
\f[B]\-m\f[R] \f[I]MECHANISMS\f[R], \f[B]\-\-mechanisms\f[R] \f[I]MECHANISMS\f[R]
Comma\-separated list of mechanisms to use for retrieving C\-states
information.
Use \[aq]\-\-list\-mechanisms\[aq] to view available mechanisms.
Many options support only one mechanism (e.g., \[aq]sysfs\[aq]), while
some support multiple (e.g., \[aq]sysfs\[aq] and \[aq]msr\[aq]).
Mechanisms are tried in the specified order.
By default, all mechanisms are allowed, with the most preferred tried
first.
.TP
\f[B]\-\-list\-mechanisms\f[R]
List available mechanisms for retrieving C\-states information.
.TP
\f[B]\-\-cstates\f[R] \f[I][CSTATES]\f[R]
Comma\-separated list of C\-states to retrieve information about,
specified by name (e.g., C1).
Use \[aq]all\[aq] to include all available Linux C\-states (default).
Remember, Linux C\-states (e.g., C6) are requests Linux can make, while
hardware C\-states (e.g., Core C6 or Package C6 on Intel platforms) are
platform\-specific states entered upon such requests.
See the \[aq]\c
.UR
https://github.com/intel/pepc/blob/main/docs/misc-cstate-namespaces.md
.UE \c
\[aq] document for details.
.TP
\f[B]\-\-pkg\-cstate\-limit\f[R]
Retrieve the current package C\-state limit, available limits, and lock
status.
The package C\-state limit defines the deepest hardware package C\-state
the platform can enter.
It is read from MSR_PKG_CST_CONFIG_CONTROL (0xE2), bits 2:0 or 3:0,
depending on the CPU model.
The lock bit (bit 15) in the same MSR determines if the OS can modify
the limit.
.TP
\f[B]\-\-c1\-demotion\f[R]
Check if C1 demotion is enabled or disabled.
On Intel platforms, this feature monitors CPU wake\-up rates.
If the rate exceeds a threshold, deep C\-state requests are demoted to
C1 to improve performance, potentially increasing power consumption.
Read from MSR_PKG_CST_CONFIG_CONTROL (0xE2), bit 26.
.TP
\f[B]\-\-c1\-undemotion\f[R]
Check if C1 undemotion is enabled or disabled.
When enabled, the CPU can reverse previously demoted requests from C1
back to deeper C\-states (e.g., C6) if frequent wake\-ups have stopped.
Read from MSR_PKG_CST_CONFIG_CONTROL (0xE2), bit 28.
.TP
\f[B]\-\-c1e\-autopromote\f[R]
Check if C1E autopromotion is enabled.
When enabled, the CPU converts all C1 C\-state requests to C1E requests.
Read from MSR_POWER_CTL (0x1FC), bit 1.
.TP
\f[B]\-\-cstate\-prewake\f[R]
Check if C\-state prewake is enabled.
When enabled, the CPU considers idle timers and starts exiting deep
C\-states early, before the next local APIC timer event.
This ensures the CPU is nearly awake by the tim the timer fires.
Read from MSR_POWER_CTL (0x1FC), bit 30.
.TP
\f[B]\-\-idle\-driver\f[R]
Retrieve the idle driver name.
The idle driver enumerates available C\-states and issues C\-state
requests.
Read from \[aq]/sys/devices/system/cpu/cpuidle/current_governor\[aq].
.TP
\f[B]\-\-governor\f[R]
Retrieve the idle governor name, which determines the C\-state to
request for an idle CPU.
Read from \[aq]/sys/devices/system/cpu/cpuidle/scaling_governor\[aq].
.TP
\f[B]\-\-governors\f[R]
Retrieve the list of available idle governors, which determine the
C\-state to request for an idle CPU.
Different governors implement various selection policies.
Read from \[aq]/sys/devices/system/cpu/cpuidle/available_governors\[aq].
.SS Subcommand \f[I]\[aq]config\[aq]\f[R]
Configure C\-states for specified CPUs.
If no parameter is provided, the current configuration will be
displayed.
Use target CPU specification options to limit the scope to specific
CPUs, cores, dies, or packages.
.TP
\f[B]\-m\f[R] \f[I]MECHANISMS\f[R], \f[B]\-\-mechanisms\f[R] \f[I]MECHANISMS\f[R]
Comma\-separated list of mechanisms to use for configuring C\-states.
Use \[aq]\-\-list\-mechanisms\[aq] to view available mechanisms.
Many options support only one mechanism (e.g., \[aq]sysfs\[aq]), while
some support multiple (e.g., \[aq]sysfs\[aq] and \[aq]msr\[aq]).
Mechanisms are tried in the specified order.
By default, all mechanisms are allowed, with the most preferred tried
first.
.TP
\f[B]\-\-list\-mechanisms\f[R]
List available mechanisms for configuring C\-states.
.TP
\f[B]\-\-enable\f[R] \f[I]CSTATES\f[R]
Comma\-separated list of C\-state names to enable.
Use \[aq]all\[aq] to include all available Linux C\-states (default).
Remember, Linux C\-states (e.g., C6) are requests Linux can make, while
hardware C\-states (e.g., Core C6 or Package C6 on Intel platforms) are
platform\-specific states entered upon such requests.
See the \[aq]\c
.UR
https://github.com/intel/pepc/blob/main/docs/misc-cstate-namespaces.md
.UE \c
\[aq] document for details.
.TP
\f[B]\-\-disable\f[R] \f[I]CSTATES\f[R]
Similar to \[aq]\-\-enable\[aq], but specifies the C\-states to disable.
.TP
\f[B]\-\-pkg\-cstate\-limit\f[R] \f[I]PKG_CSTATE_LIMIT\f[R]
Set the package C\-state limit, defining the deepest hardware package
C\-state the platform can enter.
Writes to MSR_PKG_CST_CONFIG_CONTROL (0xE2), bits 2:0 or 3:0, depending
on the CPU model.
Writing is refused if the lock bit (bit 15) in the same MSR is set.
.TP
\f[B]\-\-c1\-demotion\f[R] \f[I]on|off\f[R]
Enable or disable C1 demotion.
On Intel platforms, this feature monitors CPU wake\-up rates.
If the rate exceeds a threshold, deep C\-state requests are demoted to
C1 to improve performance at the cost of higher power consumption.
Writes to MSR_PKG_CST_CONFIG_CONTROL (0xE2), bit 26.
.TP
\f[B]\-\-c1\-undemotion\f[R] \f[I]on|off\f[R]
Enable or disable C1 undemotion.
When enabled, the CPU can reverse previously demoted C1 requests back to
deeper C\-states (e.g., C6) if frequent wake\-ups have stopped.
Writes to MSR_PKG_CST_CONFIG_CONTROL (0xE2), bit 28.
.TP
\f[B]\-\-c1e\-autopromote\f[R] \f[I]on|off\f[R]
Enable or disable C1E autopromotion.
When enabled, all C1 C\-state requests are converted to C1E.
Writes to MSR_POWER_CTL (0x1FC), bit 1.
.TP
\f[B]\-\-cstate\-prewake\f[R] \f[I]on|off\f[R]
Enable or disable C\-state prewake.
When enabled, the CPU considers idle timers and starts exiting deep
C\-states early, before the next local APIC timer event.
This ensures the CPU is nearly awake by the tim the timer fires.
Writes to MSR_POWER_CTL (0x1FC), bit 30.
.TP
\f[B]\-\-governor\f[R] \f[I]NAME\f[R]
Configure the idle governor, which decides the C\-state to request for
an idle CPU.
Updates \[aq]/sys/devices/system/cpu/cpuidle/scaling_governor\[aq].
