.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "P\-states" "" "" "" ""
.SH Command \f[I]\[aq]pstates\[aq]\f[R]
.SS General options
.TP
\f[B]\-h\f[R]
Show a short help message and exit.
.TP
\f[B]\-q\f[R]
Be quiet (print only improtant messages like warnings).
.TP
\f[B]\-d\f[R]
Print debugging information.
.TP
\f[B]\-\-debug\-modules\f[R] \f[I]MODNAME[,MODNAME1,...]\f[R]
While the \[aq]\-d\[aq] option enables all debug messages, this option
limits them to the specified modules.
For example, \[aq]\-d \-\-debug\-modules MSR\[aq] will only show debug
messages from the \[aq]MSR\[aq] module.
.TP
\f[B]\-\-version\f[R]
Print the version number and exit.
.TP
\f[B]\-H\f[R] \f[I]HOSTNAME\f[R], \f[B]\-\-host\f[R] \f[I]HOSTNAME\f[R]
Host name or IP address of the target system.
The pepc command will be executed on this system using SSH, instead of
running it locally.
If not specified, the command will be run locally.
.TP
\f[B]\-U\f[R] \f[I]USERNAME\f[R], \f[B]\-\-username\f[R] \f[I]USERNAME\f[R]
Name of the user to use for logging into the remote host over SSH.
The default user name is \[aq]root\[aq].
.TP
\f[B]\-K\f[R] \f[I]PRIVKEY\f[R], \f[B]\-\-priv\-key\f[R] \f[I]PRIVKEY\f[R]
Path to the private SSH key for logging into the remote host.
Defaults to keys in standard paths like \[aq]$HOME/.ssh\[aq].
.TP
\f[B]\-T\f[R] \f[I]TIMEOUT\f[R], \f[B]\-\-timeout\f[R] \f[I]TIMEOUT\f[R]
Timeout for establishing an SSH connection in seconds.
Defaults to 8.
.TP
\f[B]\-D\f[R] \f[I]DATASET\f[R], \f[B]\-\-dataset\f[R] \f[I]DATASET\f[R]
This option is for debugging and testing.
It specifies the dataset to emulate a host for running the command.
Typically used when running \[aq]pepc\[aq] from the source directory,
which includes datasets for various systems.
.RS
.PP
The argument can be a dataset path or name.
If specified by name, the following locations are searched for the
dataset.
.IP "1." 3
\[aq]./tests/data\[aq] in the program\[aq]s directory
.IP "2." 3
\[aq]$PEPC_DATA_PATH/tests/data\[aq]
.IP "3." 3
\[aq]$HOME/.local/share/pepc/tests/data\[aq]
.IP "4." 3
\[aq]$VIRTUAL_ENV/share/tests/data\[aq]
.IP "5." 3
\[aq]/usr/local/share/pepc/tests/data\[aq]
.IP "6." 3
\[aq]/usr/share/pepc/tests/data\[aq]
.RE
.TP
\f[B]\-\-force\-color\f[R]
Force colorized output even if the output stream is not a terminal (adds
ANSI escape codes).
.TP
\f[B]\-\-print\-man\-path\f[R]
Print path to pepc manual pages directory and exit.
This path can be added to the \[aq]MANPATH\[aq] environment variable to
make the manual pages available to the \[aq]man\[aq] tool.
.TP
\f[B]\-\-override\-cpu\-model\f[R] \f[I]VFM\f[R]
This option is for debugging and testing purposes only.
Override the target host CPU model and force {TOOLNAME} treat the host
as a specific CPU model.
The format is \[aq][<Vendor>:][<Family>:]<Model>\[aq], where
\[aq]<Vendor>\[aq] is the CPU vendor (e.g., \[aq]GenuineIntel\[aq] or
\[aq]AuthenticAMD\[aq]), \[aq]<Family>\[aq] is the CPU family (e.g., 6),
and \[aq]<Model>\[aq] is the CPU model (e.g., 0x8F).
Example: \[aq]GenuineIntel:6:0x8F\[aq] will force the tool treating the
target host CPU as a Sapphire Rapids Xeon.
The vendor and family are optional and if not specified, the tool will
use the vendor and family of the target host CPU.
The family and model can be specified in decimal or hexadecimal format.
.SS Target CPU specification options
All sub\-commans (\f[I]\[aq]info\[aq]\f[R], \f[I]\[aq]config\[aq]\f[R])
support the following target CPU specification options.
.TP
\f[B]\-\-cpus\f[R] \f[I]CPUS\f[R]
The list can include individual CPU numbers and CPU number ranges.
For example,\[aq]1\-4,7,8,10\-12\[aq] would mean CPUs 1 to 4, CPUs 7, 8,
and 10 to 12.
Use the special keyword \[aq]all\[aq] to specify all CPUs.
.TP
\f[B]\-\-cores\f[R] \f[I]CORES\f[R]
The list can include individual core numbers and core number ranges.
For example, \[aq]1\-4,7,8,10\-12\[aq] would mean cores 1 to 4, cores 7,
8, and 10 to 1.
Use the special keyword \[aq]all\[aq] to specify all cores.
This option has to be accompanied by the \[aq]\-\-package\[aq] option,
because core numbers are per\-package.
.TP
\f[B]\-\-modules\f[R] \f[I]MODULES\f[R]
The list can include individual module numbers and module number ranges.
For example, \[aq]0,2\-5\[aq] would mean module 0 and modules 2, 3, 4,
and 5.
Use the special keyword \[aq]all\[aq] to specify all modules.
Note, unlike core and die numbers, module numbers are absolute.
.TP
\f[B]\-\-dies\f[R] \f[I]DIES\f[R]
The list can include individual die numbers and die number ranges.
For example, \[aq]0\-3,5\[aq] would mean dies 0 to 3, and die 5.
Use the special keyword \[aq]all\[aq] to specify all dies.
On some systems, die numbers are globally unique, while on other systems
they are relative to the package.
In the latter case, this option has to be accompanied by the
\[aq]\-\-package\[aq] option.
.TP
\f[B]\-\-packages\f[R] \f[I]PACKAGES\f[R]
The list can include individual package numbers and package number
ranges.
For example, \[aq]0,2\-4\[aq] would mean package 0 and packages 2 to 4.
Use the special keyword \[aq]all\[aq] to specify all packages.
.TP
\f[B]\-\-core\-siblings\f[R] \f[I]CORE_SIBLINGS\f[R]
Core siblings are CPUs sharing the same core.
The list can include individual core sibling indices or index ranges.
For example, if a core includes CPUs 3 and 4, index \[aq]0\[aq] would
mean CPU 3 and index \[aq]1\[aq] would mean CPU 4.
This option can only be used to reference online CPUs, because Linux
does not provide topology information for offline CPUs.
In the example with CPUs 3 and 4, if CPU 3 was offline, then index
\[aq]0\[aq] would mean CPU 4.
.TP
\f[B]\-\-module\-siblings\f[R] \f[I]MODULE_SIBLINGS\f[R]
Module siblings are CPUs sharing the same module.
The list can include individual module sibling indices or index ranges.
For example, if a module includes CPUs 3, 4, 5, and 6, index \[aq]0\[aq]
would mean CPU 3, index \[aq]1\[aq] would mean CPU 4, and idex
\[aq]3\[aq] would mean CPU 5.
This option can only be used to reference online CPUs, because Linux
does not provide topology information for offline CPUs.
In the example with CPUs 3, 4, 5 and 6, if CPU 4 was offline, then index
\[aq]1\[aq] would mean CPU 5.
.SS Subcommand \f[I]\[aq]info\[aq]\f[R]
Retrieve P\-states information for specified CPUs.
By default, display all details for all CPUs.
Use target CPU specification options to define a subset of CPUs, cores,
dies, or packages.
.TP
\f[B]\-\-yaml\f[R]
Display output in YAML format.
.TP
\f[B]\-m\f[R] \f[I]MECHANISMS\f[R], \f[B]\-\-mechanisms\f[R] \f[I]MECHANISMS\f[R]
A comma\-separated list of mechanisms for retrieving information.
Use \[aq]\-\-list\-mechanisms\[aq] to view available mechanisms.
Many options support only one mechanism (e.g., \[aq]sysfs\[aq]), while
others may support multiple (e.g., \[aq]sysfs\[aq] and \[aq]msr\[aq]).
Mechanisms are tried in the specified order.
By default, all mechanisms are allowed, and the most preferred ones are
tried first.
.TP
\f[B]\-\-list\-mechanisms\f[R]
Display available mechanisms for retrieving P\-states information.
.TP
\f[B]\-\-min\-freq\f[R]
Retrieve the minimum CPU frequency using the \[aq]sysfs\[aq] or
\[aq]msr\[aq] mechanisms.
The \[aq]sysfs\[aq] mechanism reads
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/scaling_min_freq\[aq],
while \[aq]msr\[aq] reads the MSR_HWP_REQUEST (0x774) register, bits
7:0.
.TP
\f[B]\-\-max\-freq\f[R]
Retrieve the maximum CPU frequency using the \[aq]sysfs\[aq] or
\[aq]msr\[aq] mechanisms.
The \[aq]sysfs\[aq] mechanism reads
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/scaling_max_freq\[aq],
while \[aq]msr\[aq] reads the MSR_HWP_REQUEST (0x774) register, bits
15:8.
.TP
\f[B]\-\-min\-freq\-limit\f[R]
Retrieve the minimum CPU frequency supported by the Linux kernel from
\[dq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/cpuinfo_min_freq\[dq].
.TP
\f[B]\-\-max\-freq\-limit\f[R]
Retrieve the maximum CPU frequency supported by the Linux kernel from
\[dq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/cpuinfo_max_freq\[dq].
.TP
\f[B]\-\-frequencies\f[R]
List CPU frequencies supported by the Linux kernel for
\[aq]\-\-min\-freq\[aq] and \[aq]\-\-max\-freq\[aq] options.
If
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/scaling_available_frequencies\[aq]
is available (usually the case with the \[aq]acpi_cpufreq\[aq] driver),
retrieve the data from there.
Otherwise, in case of an Intel platform, assume that all frequencies
from \[aq]\-\-min\-freq\-limit\[aq] to \[aq]\-\-max\-freq\-limit\[aq]
are available with a step equal to \[aq]\-\-bus\-clock\[aq].
.TP
\f[B]\-\-base\-freq\f[R]
Retrieve the base CPU frequency, also known as the \[dq]guaranteed
frequency,\[dq] HFM (High Frequency Mode), or P1.
The supported mechanisms are: \[aq]sysfs\[aq], \[aq]cppc\[aq],
\[aq]msr\[aq].
.RS
.PP
The preferred mechanism is \[aq]sysfs\[aq], which reads
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/base_frequency\[aq].
If the file is unavailable, it falls back to
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/bios_limit\[aq].
.PP
The \[aq]cppc\[aq] mechanism read the
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/nominal_freq\[aq].
.PP
The \[aq]msr\[aq] mechanism reads the base CPU frequency from the
MSR_HWP_CAPABILITIES (0x771), bits 15:8 if CPU hardware power management
is enabled, otherwise from MSR_PLATFORM_INFO (0xCE), bits 15:8.
.RE
.TP
\f[B]\-\-bus\-clock\f[R]
Retrieve the bus clock frequency, one of the CPU\[aq]s reference clocks.
The \[aq]msr\[aq] mechanism reads MSR_FSB_FREQ (0xCD), bits 2:0, for
legacy Intel platforms.
For modern Intel platforms, the \[aq]doc\[aq] mechanism assumes a 100MHz
bus clock.
.TP
\f[B]\-\-min\-oper\-freq\f[R]
Retrieve the minimum CPU operating frequency, the lowest frequency the
CPU can operate at.
This frequency, also known as Pm, may not always be directly available
to the OS but can be used by the platform in certain scenarios (e.g.,
some C\-states).
The supported mechanisms are: \[aq]msr\[aq], \[aq]cppc\[aq].
.RS
.PP
The \[aq]msr\[aq] mechanism: \[aq]msr\[aq], reads MSR_PLATFORM_INFO
(0xCE), bits 55:48.
.PP
The \[aq]cppc\[aq] mechanism reads
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/lowest_freq\[aq].
If unavailable, the frequency is calculated as \[dq]base_freq *
lowest_perf / nominal_perf\[dq] using values from: base_freq:
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/nominal_freq\[aq],
lowest_perf:
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/lowest_perf\[aq],
nominal_perf:
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/nominal_perf\[aq].
.RE
.TP
\f[B]\-\-max\-eff\-freq\f[R]
Retrieve the maximum CPU efficiency frequency, also known as LFM (Low
Frequency Mode) or Pn.
Mechanism: \[aq]msr\[aq], reads MSR_HWP_CAPABILITIES (0x771), bits 23:16
on if CPU hardware power management is enabled, otherwise reads
MSR_PLATFORM_INFO (0xCE), bits 47:40.
.TP
\f[B]\-\-turbo\f[R]
Check if turbo is enabled or disabled.
When enabled, CPUs can run at frequencies above the base frequency if
allowed by the OS and thermal conditions.
Reads the sysfs file based on the CPU frequency driver: intel_pstate \-
\[aq]/sys/devices/system/cpu/intel_pstate/no_turbo\[aq], acpi\-cpufreq
\-\[aq]/sys/devices/system/cpu/cpufreq/boost\[aq].
The setting has global scope.
.TP
\f[B]\-\-max\-turbo\-freq\f[R]
Retrieve the maximum turbo frequency \- the highest frequency a single
CPU can run on.
Also known as max 1\-core turbo or P01.
The supported mechanisms are: \[aq]msr\[aq], \[aq]cppc\[aq].
.RS
.PP
The \[aq]msr\[aq] mechanism reads MSR_HWP_CAPABILITIES (0x771), bits 7:0
if hardware power management is enabled, otherwise reads
MSR_TURBO_RATIO_LIMIT (0x1AD), bits 7:0.
.PP
The \[aq]cppc\[aq] mechanism reads
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/highest_freq\[aq].
If unavailable, the frequency is calculated as \[dq]base_freq *
highest_perf / nominal_perf\[dq] using values from: base_freq:
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/nominal_freq\[aq],
highest_perf:
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/highest_perf\[aq],
nominal_perf:
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/acpi_cppc/nominal_perf\[aq].
.RE
.TP
\f[B]\-\-min\-uncore\-freq\f[R]
Retrieve the minimum uncore frequency.
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/min_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/min_freq_khz\[aq].
.TP
\f[B]\-\-max\-uncore\-freq\f[R]
Retrieve the maximum uncore frequency.
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/max_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/max_freq_khz\[aq].
.TP
\f[B]\-\-min\-uncore\-freq\-limit\f[R]
Get minimum uncore frequency limit supported but the kernel.
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, read
/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/initial_min_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/initial_min_freq_khz\[aq].
.TP
\f[B]\-\-max\-uncore\-freq\-limit\f[R]
Get maximum uncore frequency limit supported but the kernel.
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, read
/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/initial_max_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/initial_max_freq_khz\[aq].
.TP
\f[B]\-\-hwp\f[R]
Check if hardware power management is enabled.
When enabled, CPUs can scale their frequency automatically without OS
involvement.
Mechanism: \[aq]msr\[aq], reads MSR_PM_ENABLE (0x770), bit 0.
This setting has global scope.
.TP
\f[B]\-\-epp\f[R]
Retrieve EPP (Energy Performance Preference) using \[aq]sysfs\[aq]
(preferred) or \[aq]msr\[aq] mechanisms.
EPP is a hint to the CPU on energy efficiency vs performance.
The value ranges from 0\-255 (maximum energy efficiency to maximum
performance) or can be a policy name (supported by \[aq]sysfs\[aq]
only).
The \[aq]sysfs\[aq] mechanism reads
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/energy_performance_preference\[aq],
while the \[aq]msr\[aq] mechanism reads MSR_HWP_REQUEST (0x774), bits
31:24.
.TP
\f[B]\-\-epb\f[R]
Retrieve EPB (Energy Performance Bias) using \[aq]sysfs\[aq] (preferred)
or \[aq]msr\[aq] mechanisms.
EPB is a hint to the CPU on energy efficiency versus performance.
The value ranges from 0\-15 (maximum performance to maximum energy
efficiency) or can be a policy name (supported by \[aq]sysfs\[aq] only).
The \[aq]sysfs\[aq] mechanism reads
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/power/energy_perf_bias\[aq],
while the \[aq]msr\[aq] mechanism reads MSR_ENERGY_PERF_BIAS (0x1B0),
bits 3:0.
.TP
\f[B]\-\-driver\f[R]
Retrieve the CPU frequency driver name.
The driver enumerates and manages P\-states on the platform.
The name is read from
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/scaling_driver\[aq].
While sysfs provides a per\-CPU API, Intel platforms typically use a
single driver.
.TP
\f[B]\-\-intel\-pstate\-mode\f[R]
Retrieve the \[aq]intel_pstate\[aq] driver mode: \[aq]active\[aq],
\[aq]passive\[aq], or \[aq]off\[aq].
In \[aq]active\[aq] mode, custom \[aq]intel_pstate\[aq] governors are
used.
In \[aq]passive\[aq] mode, generic Linux governors are employed.
The mode is read from
\[aq]/sys/devices/system/cpu/intel_pstate/status\[aq].
.TP
\f[B]\-\-governor\f[R]
Retrieve the CPU frequency governor, which determines the P\-state based
on CPU load and other factors.
The governor name is read from
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/scaling_governor\[aq].
.TP
\f[B]\-\-governors\f[R]
Retrieve the list of available CPU frequency governors.
Governors determine the P\-state of a CPU based on its activity and
other factors, each implementing a unique selection policy.
Available governors are listed in
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/scaling_available_governors\[aq].
.SS Subcommand \f[I]\[aq]config\[aq]\f[R]
Configure P\-states for specified CPUs.
If no parameter is provided, the current value(s) will be displayed.
Use target CPU specification options to define the subset of CPUs,
cores, dies, or packages.
.TP
\f[B]\-m\f[R] \f[I]MECHANISMS\f[R], \f[B]\-\-mechanisms\f[R] \f[I]MECHANISMS\f[R]
A comma\-separated list of mechanisms allowed for configuring P\-states.
Use \[aq]\-\-list\-mechanisms\[aq] to view available mechanisms.
Many options support only one mechanism (e.g., \[aq]sysfs\[aq]), while
some support multiple (e.g., \[aq]sysfs\[aq] and \[aq]msr\[aq]).
Mechanisms are tried in the specified order.
By default, all mechanisms are allowed, and the most preferred ones are
tried first.
.TP
\f[B]\-\-list\-mechanisms\f[R]
Display available mechanisms for configuring P\-states.
.TP
\f[B]\-\-min\-freq\f[R] \f[I]MIN_FREQ\f[R]
Set the minimum CPU frequency.
The default unit is \[aq]Hz\[aq], but \[aq]kHz\[aq], \[aq]MHz\[aq], and
\[aq]GHz\[aq] can also be used (for example \[dq]900MHz\[dq]).
The supported mechanisms are: \[aq]sysfs\[aq], \[aq]msr\[aq].
The \[aq]sysfs\[aq] mechanism uses
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/cpufreq/scaling_min_freq\[aq].
The \[aq]msr\[aq] mechanism uses the MSR_HWP_REQUEST (0x774) register,
bits 7:0.
.RS
.PP
The following special values can also be used: \f[B]min\f[R] Minimum
frequency supported by the Linux CPU frequency driver (see
\[aq]\-\-min\-freq\-limit\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]sysfs\[aq]
mechanism is always used to resolve \[aq]min\[aq] to the actual minimum
frequency.
\f[B]max\f[R] Maximum frequency supported by the Linux CPU frequency
driver (see \[aq]\-\-max\-freq\-limit\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]sysfs\[aq]
mechanism is always used to resolve \[aq]max\[aq] to the actual maximum
frequency.
\f[B]base\f[R], \f[B]hfm\f[R], \f[B]P1\f[R] Base CPU frequency (see
\[aq]\-\-base\-freq\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, all available
mechanisms are tried to resolve these special values to the actual base
frequency.
\f[B]eff\f[R], \f[B]lfm\f[R], \f[B]Pn\f[R] Maximum CPU efficiency
frequency (see \[aq]\-\-max\-eff\-freq\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]msr\[aq]
mechanism is always used to resolve these special values to the actual
maximum CPU efficiency frequency.
\f[B]Pm\f[R] Minimum CPU operating frequency (see
\[aq]\-\-min\-oper\-freq\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]msr\[aq]
mechanism is always used to resolve these special values to the actual
minimum CPU operating frequency.
.PP
Note, on some systems \[aq]Pm\[aq] is lower than \[aq]Pn\[aq].
For example, \[aq]Pm\[aq] may be 500MHz, while \[aq]Pn\[aq] may be
800MHz.
On such systems, Linux may use \[aq]Pn\[aq] as the minimum supported
frequency limit.
From Linux\[aq]s perspective, the minimum supported frequency is 800MHz,
not 500MHz.
In this case, using \[aq]\-\-min\-freq 500MHz \-\-mechanisms sysfs\[aq]
will fail, while \[aq]\-\-min\-freq 500MHz \-\-mechanisms msr\[aq] will
succeed.
.RE
.TP
\f[B]\-\-max\-freq\f[R] \f[I]MAX_FREQ\f[R]
Set the maximum CPU frequency.
Similar to \[aq]\-\-min\-freq\[aq], but applies to the maximum
frequency.
.TP
\f[B]\-\-turbo\f[R] \f[I]on|off\f[R]
Toggle turbo mode globally via sysfs.
When enabled, CPUs can exceed the base frequency if allowed by the OS
and thermal conditions.
In case of \[aq]intel_pstate\[aq] driver, use
\[aq]/sys/devices/system/cpu/intel_pstate/no_turbo\[aq], in case of
\[aq]acpi\-cpufreq\[aq] driver, use
\[aq]/sys/devices/system/cpu/cpufreq/boost\[aq].
.TP
\f[B]\-\-min\-uncore\-freq\f[R] \f[I]MIN_UNCORE_FREQ\f[R]
Set the minimum uncore frequency.
The default unit is \[aq]Hz\[aq], but \[aq]kHz\[aq], \[aq]MHz\[aq], and
\[aq]GHz\[aq] can also be used (for example \[aq]900MHz\[aq]).
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, use
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/min_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, use
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/min_freq_khz\[aq].
.RS
.PP
The following special values can also be used: \f[B]min\f[R] Minimum
uncore frequency supported (see \[aq]\-\-min\-freq\-limit\[aq]).
\f[B]max\f[R] Maximum uncore frequency supported (see
\[aq]\-\-max\-freq\-limit\[aq]).
\f[B]mdl\f[R] Middle uncore frequency between minimum and maximum
rounded to nearest 100MHz.
.RE
.TP
\f[B]\-\-max\-uncore\-freq\f[R] \f[I]MAX_UNCORE_FREQ\f[R]
Set the maximum uncore frequency.
Similar to \[aq]\-\-min\-uncore\-freq\[aq], but applies to the maximum
frequency.
.TP
\f[B]\-\-epp\f[R] \f[I]EPP\f[R]
Set EPP (Energy Performance Preference) using \[aq]sysfs\[aq]
(preferred) or \[aq]msr\[aq] mechanisms.
EPP is a hint to the CPU on energy efficiency vs performance.
The value ranges from 0\-255 (maximum energy efficiency to maximum
performance) or can be a policy name (supported by \[aq]sysfs\[aq]
only).
The \[aq]sysfs\[aq] mechanism writes to
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/energy_performance_preference\[aq],
while the \[aq]msr\[aq] mechanism writes to MSR_HWP_REQUEST (0x774),
bits 31:24.
.TP
\f[B]\-\-epb\f[R] \f[I]EPB\f[R]
Set EPB (Energy Performance Bias) using \[aq]sysfs\[aq] (preferred) or
\[aq]msr\[aq] mechanisms.
EPB is a hint to the CPU on energy efficiency versus performance.
The value ranges from 0\-15 (maximum performance to maximum energy
efficiency) or can be a policy name (supported by \[aq]sysfs\[aq] only).
The \[aq]sysfs\[aq] mechanism writes to
\[aq]/sys/devices/system/cpu/cpu<NUMBER>/power/energy_perf_bias\[aq],
while the \[aq]msr\[aq] mechanism writes to MSR_ENERGY_PERF_BIAS
(0x1B0), bits 3:0.
.TP
\f[B]\-\-intel\-pstate\-mode\f[R] \f[I][MODE]\f[R]
Set the \[aq]intel_pstate\[aq] driver mode: \[aq]active\[aq],
\[aq]passive\[aq], or \[aq]off\[aq].
In \[aq]active\[aq] mode, custom \[aq]intel_pstate\[aq] governors are
used.
In \[aq]passive\[aq] mode, generic Linux governors are employed.
Writes to \[aq]/sys/devices/system/cpu/intel_pstate/status\[aq].
.TP
\f[B]\-\-governor\f[R] \f[I][NAME]\f[R]
Set the CPU frequency governor, which determines the P\-state based on
CPU load and other factors.
Writes to
\[aq]/sys/devices/system/cpu/cpufreq/policy<NUMBER>/scaling_governor\[aq].
