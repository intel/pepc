.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "Uncore properties." "" "" "" ""
.SH Command \f[I]\[aq]uncore\[aq]\f[R]
.SS General options
.TP
\f[B]\-h\f[R]
Show a short help message and exit.
.TP
\f[B]\-q\f[R]
Be quiet (print only improtant messages like warnings).
.TP
\f[B]\-d\f[R]
Print debugging information.
.TP
\f[B]\-\-debug\-modules\f[R] \f[I]MODNAME[,MODNAME1,...]\f[R]
While the \[aq]\-d\[aq] option enables all debug messages, this option
limits them to the specified modules.
For example, \[aq]\-d \-\-debug\-modules MSR\[aq] will only show debug
messages from the \[aq]MSR\[aq] module.
.TP
\f[B]\-\-version\f[R]
Print the version number and exit.
.TP
\f[B]\-H\f[R] \f[I]HOSTNAME\f[R], \f[B]\-\-host\f[R] \f[I]HOSTNAME\f[R]
Host name or IP address of the target system.
The pepc command will be executed on this system using SSH, instead of
running it locally.
If not specified, the command will be run locally.
.TP
\f[B]\-U\f[R] \f[I]USERNAME\f[R], \f[B]\-\-username\f[R] \f[I]USERNAME\f[R]
Name of the user to use for logging into the remote host over SSH.
The default user name is \[aq]root\[aq].
.TP
\f[B]\-K\f[R] \f[I]PRIVKEY\f[R], \f[B]\-\-priv\-key\f[R] \f[I]PRIVKEY\f[R]
Path to the private SSH key for logging into the remote host.
Defaults to keys in standard paths like \[aq]$HOME/.ssh\[aq].
.TP
\f[B]\-T\f[R] \f[I]TIMEOUT\f[R], \f[B]\-\-timeout\f[R] \f[I]TIMEOUT\f[R]
Timeout for establishing an SSH connection in seconds.
Defaults to 8.
.TP
\f[B]\-D\f[R] \f[I]DATASET\f[R], \f[B]\-\-dataset\f[R] \f[I]DATASET\f[R]
This option is for debugging and testing.
It specifies the dataset to emulate a host for running the command.
Typically used when running \[aq]pepc\[aq] from the source directory,
which includes datasets for various systems.
.RS
.PP
The argument can be a dataset path or name.
If specified by name, the following locations are searched for the
dataset.
.IP "1." 3
\[aq]./tests/data\[aq] in the program\[aq]s directory
.IP "2." 3
\[aq]$PEPC_DATA_PATH/tests/data\[aq]
.IP "3." 3
\[aq]$HOME/.local/share/pepc/tests/data\[aq]
.IP "4." 3
\[aq]$VIRTUAL_ENV/share/tests/data\[aq]
.IP "5." 3
\[aq]/usr/local/share/pepc/tests/data\[aq]
.IP "6." 3
\[aq]/usr/share/pepc/tests/data\[aq]
.RE
.TP
\f[B]\-\-force\-color\f[R]
Force colorized output even if the output stream is not a terminal (adds
ANSI escape codes).
.TP
\f[B]\-\-print\-man\-path\f[R]
Print path to pepc manual pages directory and exit.
This path can be added to the \[aq]MANPATH\[aq] environment variable to
make the manual pages available to the \[aq]man\[aq] tool.
.TP
\f[B]\-\-override\-cpu\-model\f[R] \f[I]VFM\f[R]
This option is for debugging and testing purposes only.
Override the target host CPU model and force {TOOLNAME} treat the host
as a specific CPU model.
The format is \[aq][<Vendor>:][<Family>:]<Model>\[aq], where
\[aq]<Vendor>\[aq] is the CPU vendor (e.g., \[aq]GenuineIntel\[aq] or
\[aq]AuthenticAMD\[aq]), \[aq]<Family>\[aq] is the CPU family (e.g., 6),
and \[aq]<Model>\[aq] is the CPU model (e.g., 0x8F).
Example: \[aq]GenuineIntel:6:0x8F\[aq] will force the tool treating the
target host CPU as a Sapphire Rapids Xeon.
The vendor and family are optional and if not specified, the tool will
use the vendor and family of the target host CPU.
The family and model can be specified in decimal or hexadecimal format.
.SS Target domain specification options
All sub\-commans (\f[I]\[aq]info\[aq]\f[R], \f[I]\[aq]config\[aq]\f[R])
support the following target domain specification options.
.TP
\f[B]\-\-cpus\f[R] \f[I]CPUS\f[R]
The list can include individual CPU numbers and CPU number ranges.
For example,\[aq]1\-4,7,8,10\-12\[aq] would mean CPUs 1 to 4, CPUs 7, 8,
and 10 to 12.
Use the special keyword \[aq]all\[aq] to specify all CPUs.
.TP
\f[B]\-\-cores\f[R] \f[I]CORES\f[R]
The list can include individual core numbers and core number ranges.
For example, \[aq]1\-4,7,8,10\-12\[aq] would mean cores 1 to 4, cores 7,
8, and 10 to 1.
Use the special keyword \[aq]all\[aq] to specify all cores.
This option has to be accompanied by the \[aq]\-\-package\[aq] option,
because core numbers are per\-package.
.TP
\f[B]\-\-modules\f[R] \f[I]MODULES\f[R]
The list can include individual module numbers and module number ranges.
For example, \[aq]0,2\-5\[aq] would mean module 0 and modules 2, 3, 4,
and 5.
Use the special keyword \[aq]all\[aq] to specify all modules.
Note, unlike core and die numbers, module numbers are absolute.
.TP
\f[B]\-\-dies\f[R] \f[I]DIES\f[R]
The list can include individual die numbers and die number ranges.
For example, \[aq]0\-3,5\[aq] would mean dies 0 to 3, and die 5.
Use the special keyword \[aq]all\[aq] to specify all dies.
On some systems, die numbers are globally unique, while on other systems
they are relative to the package.
In the latter case, this option has to be accompanied by the
\[aq]\-\-package\[aq] option.
.TP
\f[B]\-\-packages\f[R] \f[I]PACKAGES\f[R]
The list can include individual package numbers and package number
ranges.
For example, \[aq]0,2\-4\[aq] would mean package 0 and packages 2 to 4.
Use the special keyword \[aq]all\[aq] to specify all packages.
.TP
\f[B]\-\-core\-siblings\f[R] \f[I]CORE_SIBLINGS\f[R]
Core siblings are CPUs sharing the same core.
The list can include individual core sibling indices or index ranges.
For example, if a core includes CPUs 3 and 4, index \[aq]0\[aq] would
mean CPU 3 and index \[aq]1\[aq] would mean CPU 4.
This option can only be used to reference online CPUs, because Linux
does not provide topology information for offline CPUs.
In the example with CPUs 3 and 4, if CPU 3 was offline, then index
\[aq]0\[aq] would mean CPU 4.
.TP
\f[B]\-\-module\-siblings\f[R] \f[I]MODULE_SIBLINGS\f[R]
Module siblings are CPUs sharing the same module.
The list can include individual module sibling indices or index ranges.
For example, if a module includes CPUs 3, 4, 5, and 6, index \[aq]0\[aq]
would mean CPU 3, index \[aq]1\[aq] would mean CPU 4, and idex
\[aq]3\[aq] would mean CPU 5.
This option can only be used to reference online CPUs, because Linux
does not provide topology information for offline CPUs.
In the example with CPUs 3, 4, 5 and 6, if CPU 4 was offline, then index
\[aq]1\[aq] would mean CPU 5.
.SS Subcommand \f[I]\[aq]info\[aq]\f[R]
Retrieve uncore information for specified dies.
By default, display all details for all dies.
Use target domain specification options to define a subset of CPUs,
cores, dies, or packages.
.TP
\f[B]\-\-yaml\f[R]
Display output in YAML format.
.TP
\f[B]\-m\f[R] \f[I]MECHANISMS\f[R], \f[B]\-\-mechanisms\f[R] \f[I]MECHANISMS\f[R]
A comma\-separated list of mechanisms for retrieving information.
Use \[aq]\-\-list\-mechanisms\[aq] to view available mechanisms.
Many options support only one mechanism (e.g., \[aq]sysfs\[aq]), while
others may support multiple (e.g., \[aq]sysfs\[aq] and \[aq]msr\[aq]).
Mechanisms are tried in the specified order.
By default, all mechanisms are allowed, and the most preferred ones are
tried first.
.TP
\f[B]\-\-list\-mechanisms\f[R]
Display available mechanisms for retrieving uncore information.
.TP
\f[B]\-\-min\-freq\f[R]
Retrieve the minimum uncore frequency.
The supported mechanisms are: \[aq]sysfs\[aq], \[aq]tpmi\[aq].
In case of the \[aq]sysfs\[aq] mechanism, the sysfs path depends on what
uncore driver is used.
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, use
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/min_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, use
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/min_freq_khz\[aq].
.RS
.PP
The \[aq]tpmi\[aq] mechanism uses the tpmi driver debugfs interface to
access TPMI registers.
The exact path depends on the target die number.
Example of the debugfs file path is
\[aq]/sys/kernel/debug/tpmi\-0000:00:03.1/tpmi\-id\-02/mem_dump\[aq]
.RE
.TP
\f[B]\-\-max\-freq\f[R]
Retrieve the maximum uncore frequency.
Similar to \[aq]\-\-min\-freq\[aq], but for the maximum uncore
frequency.
Uses the same mechanisms as \[aq]\-\-min\-freq\[aq], but the sysfs
mechanism uses the \[aq]max_freq_khz\[aq] file instead of
\[aq]min_freq_khz\[aq].
.TP
\f[B]\-\-min\-freq\-limit\f[R]
Get minimum uncore frequency limit supported but the kernel.
The supported mechanism is \[aq]sysfs\[aq].
In case of the \[aq]intel_uncore_frequency_tpmi\[aq] driver, read
/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/initial_min_freq_khz\[aq].
In case of the \[aq]intel_uncore_frequency\[aq] driver, read
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/package_<NUMBER>_die_<NUMBER>/initial_min_freq_khz\[aq].
.RS
.PP
The \[aq]tpmi\[aq] mechanism does not provide min/max uncore frequency
limits, therefore not available.
.RE
.TP
\f[B]\-\-max\-freq\-limit\f[R]
Retrieve the maximum uncore frequency limit.
Similar to \[aq]\-\-min\-freq\-limit\[aq], but for the maximum uncore
frequency limit.
Uses the same mechanisms as \[aq]\-\-min\-freq\-limit\[aq], but the
sysfs mechanism uses the \[aq]initial_max_freq_khz\[aq] file instead of
\[aq]initial_min_freq_khz\[aq].
.TP
\f[B]\-\-elc\-low\-threshold\f[R]
Get the uncore ELC low threshold.
The threshold defines the aggregate CPU utilization percentage.
When utilization falls below this threshold, the platform sets the
uncore frequency floor to the low ELC frequency (subject to the the
\[aq]\-\-min\-freq\-limit\[aq] \- if the limit is higher than the low
ELC frequency, the limit is used as the floor instead).
.RS
.PP
Supported mechanisms are: \[aq]sysfs\[aq], \[aq]tpmi\[aq].
The \[aq]sysfs\[aq] mechanism reads the
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/elc_low_threshold_percent\[aq].
The TPMI reads the same debugfs file as \[aq]\-\-min\-freq\[aq].
.RE
.TP
\f[B]\-\-elc\-high\-threshold\f[R]
Get the uncore ELC high threshold.
The threshold defines the aggregate CPU utilization percentage at which
the platform begins increasing the uncore frequency more
enthusiastically than before.
When utilization exceeds this threshold, the platform gradually raises
the uncore frequency until utilization drops below the threshold or the
frequency reaches the \[aq]\-\-max\-freq\[aq] limit.
In addition, uncore frequency increases may be prevented by other
constraints, such as thermal or power limits.
.RS
.PP
Supported mechanisms are: \[aq]sysfs\[aq], \[aq]tpmi\[aq].
The \[aq]sysfs\[aq] mechanism reads the
\[aq]/sys/devices/system/cpu/intel_uncore_frequency/uncore<NUMBER>/elc_high_threshold_percent\[aq].
The TPMI reads the same debugfs file as \[aq]\-\-max\-freq\[aq].
.RE
.SS Subcommand \f[I]\[aq]config\[aq]\f[R]
Configure uncore proparties for specified dies.
If no parameter is provided, the current value(s) will be displayed.
Use target domain specification options to define the subset of CPUs,
cores, dies, or packages.
.TP
\f[B]\-m\f[R] \f[I]MECHANISMS\f[R], \f[B]\-\-mechanisms\f[R] \f[I]MECHANISMS\f[R]
A comma\-separated list of mechanisms allowed for configuring uncore
properties.
Use \[aq]\-\-list\-mechanisms\[aq] to view available mechanisms.
Many options support only one mechanism (e.g., \[aq]sysfs\[aq]), while
some support multiple (e.g., \[aq]sysfs\[aq] and \[aq]msr\[aq]).
Mechanisms are tried in the specified order.
By default, all mechanisms are allowed, and the most preferred ones are
tried first.
.TP
\f[B]\-\-list\-mechanisms\f[R]
Display available mechanisms for configuring uncore properties.
.TP
\f[B]\-\-min\-freq\f[R] \f[I]MIN_FREQ\f[R]
Set the minimum uncore frequency.
The default unit is \[aq]Hz\[aq], but \[aq]kHz\[aq], \[aq]MHz\[aq], and
\[aq]GHz\[aq] can also be used (for example \[aq]900MHz\[aq]).
Uses the same mechanisms as described in the \[aq]info\[aq]
sub\-command.
.RS
.PP
The following special values can also be used: \f[B]min\f[R] Minimum
uncore frequency supported (see \[aq]\-\-min\-freq\-limit\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]sysfs\[aq]
mechanism is always used to resolve \[aq]min\[aq] to the actual minimum
frequency.
\f[B]max\f[R] Maximum uncore frequency supported (see
\[aq]\-\-max\-freq\-limit\[aq]).
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]sysfs\[aq]
mechanism is always used to resolve \[aq]max\[aq] to the actual maximum
frequency.
\f[B]mdl\f[R] The middle uncore frequency value between minimum and
maximum rounded to nearest 100MHz.
Regardless of the \[aq]\-\-mechanisms\[aq] option, the \[aq]sysfs\[aq]
mechanism is always used to resolve \[aq]mdl\[aq] to the actual middle
frequency.
.PP
Note, the \[aq]tpmi\[aq] mechanism does not provide minimum or maximum
uncore frequency limits (the allowed range).
As a result, it is possible to set uncore frequency values outside the
supported limits, such as setting the minimum frequency below the actual
minimum limit.
Use caution when configuring uncore frequencies with the \[aq]tpmi\[aq]
mechanism.
.RE
.TP
\f[B]\-\-max\-freq\f[R] \f[I]MAX_FREQ\f[R]
Set the maximum uncore frequency.
Uses the same mechanisms as described in the \[aq]info\[aq]
sub\-command.
Similar to \[aq]\-\-min\-freq\[aq], but applies to the maximum
frequency.
.TP
\f[B]\-\-elc\-low\-threshold\f[R]
Set the uncore ELC low threshold.
Same as in the \[aq]info\[aq] sub\-command, but sets the ELC low
threshold.
.TP
\f[B]\-\-elc\-high\-threshold\f[R]
Set the uncore ELC high threshold.
Same as in the \[aq]info\[aq] sub\-command, but sets the ELC high
threshold.
